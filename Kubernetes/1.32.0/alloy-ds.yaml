apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config-ds
  namespace: logging
data:
  config.alloy: |
    local.file_match "messages" {
        path_targets = [
            {
                "__path__"     = "/log/messages",
                "node_name"    = sys.env("NODE_NAME"),
                "service_name" = "system-messages",
            },
            {
                "__path__"     = "/log/secure",
                "node_name"    = sys.env("NODE_NAME"),
                "service_name" = "system-secure",
            },
        ]
    }

    loki.source.file "messages" {
        targets    = local.file_match.messages.targets
        forward_to = [loki.write.default.receiver]
    }

    loki.write "default" {
      endpoint {
        url = "http://loki.logging.svc.cluster.local:3100/loki/api/v1/push"
      }
    }

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alloy-ds
  namespace: logging
spec:
  selector:
    matchLabels:
      app: alloy-ds
  template:
    metadata:
      labels:
        app: alloy-ds
    spec:
      containers:
        - name: alloy-ds
          image: grafana/alloy:latest
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
            - name: alloy-config-ds
              mountPath: /etc/alloy
            - name: log
              mountPath: /log
      tolerations:  # 添加容忍的声明
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      volumes:
        - name: alloy-config-ds
          configMap:
            name: alloy-config-ds
        - name: log
          hostPath:
            path: /var/log
